[server]
  host = "127.0.0.1"
  port = 3010
  kind = "lazy"

  # Checkpointing state.
  checkpointing = true

  # Checkpoint interval in number of blocks.
  checkpointInterval = 2000

  # Enable state creation
  enableState = true

  # Boolean to filter logs by contract.
  filterLogs = true

  # Max block range for which to return events in eventsInRange GQL query.
  # Use -1 for skipping check on block range.
  maxEventsBlockRange = -1

  [server.p2p]
    enableRelay = true
    enablePeer = true

    [server.p2p.relay]
      host = "127.0.0.1"
      port = 9090
      relayPeers = []
      peerIdFile = '../peer/relay-id.json'
      announce = ''
      enableDebugInfo = true

    [server.p2p.peer]
      relayMultiaddr = '/ip4/127.0.0.1/tcp/9090/ws/p2p/12D3KooWHFhLLaj9ZeZ6amEJRd1yv6T6nTd9pH97Jwde6qnwZ5Sh'
      pubSubTopic = 'mobymask'
      peerIdFile = '../peer/peer-id.json'
      enableDebugInfo = true
      enableL2Txs = false

      [server.p2p.peer.l2TxsConfig]
        privateKey = '142fae3aa4bd0911cfd3dd3214f9136a4f2a111d1aaa48a252e9a19daf94075a'
        contractAddress = '0xBBC15D791De9f6E46D9C8e221280e8E16022cab7'

[metrics]
  host = "127.0.0.1"
  port = 9000

  [metrics.gql]
    port = 9001

[database]
  type = "postgres"
  host = "localhost"
  port = 5432
  database = "mobymask-v2-watcher"
  username = "postgres"
  password = "postgres"
  synchronize = true
  logging = false

[upstream]
  [upstream.ethServer]
    gqlApiEndpoint = "http://127.0.0.1:8082/graphql"
    rpcProviderEndpoint = "http://127.0.0.1:8545"

  [upstream.cache]
    name = "requests"
    enabled = false
    deleteOnStart = false

[jobQueue]
  dbConnectionString = "postgres://postgres:postgres@localhost/mobymask-v2-watcher-job-queue"
  maxCompletionLagInSecs = 300
  jobDelayInMilliSecs = 100
  eventsInBatch = 50
  blockDelayInMilliSecs = 2000
  prefetchBlocksInMem = true
  prefetchBlockCount = 10
